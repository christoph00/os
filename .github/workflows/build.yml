name: Build Container

on:
  schedule:
    - cron: 0 3 * * *
  push:
    branches:
      - main
    tags:
      - v*.*.*
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Maximize build space
        uses: ublue-os/remove-unwanted-software@v7
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3

      - name: Determine image name & tag
        id: meta
        shell: bash
        run: |
          set -euxo pipefail
          if [ "$GITHUB_EVENT_NAME" == "release" ]; then
            IMAGE_TAG="${GITHUB_REF##*/}"
          else
            IMAGE_TAG="$(git rev-parse --short "$GITHUB_SHA")"
          fi
          IMAGE_TAG="${IMAGE_TAG,,}"
          IMAGE_NAME="${GITHUB_REPOSITORY,,}"

          echo "Building ${IMAGE_NAME}:${IMAGE_TAG}"

          echo "tag=${IMAGE_TAG}" >> "$GITHUB_OUTPUT"
          echo "name=${IMAGE_NAME}" >> "$GITHUB_OUTPUT"
          echo "repo=${GITHUB_REPOSITORY}" >> "$GITHUB_OUTPUT"
          echo "repo_ref=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> "$GITHUB_OUTPUT"
    
      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./Containerfile
          image: ${{ steps.meta.outputs.name }}
          tags: ${{ steps.meta.outputs.tag }} ${{ github.event_name == 'release' && 'latest' || 'staging' }}
          oci: false
          build-args: |
            REPO=${{ steps.meta.outputs.repo }}
            REPO_REF=${{ steps.meta.outputs.repo_ref }}
      - name: Push image to ghcr.io
        id: push
        uses: redhat-actions/push-to-registry@v2
        with:
          tags: ${{ steps.build_image.outputs.tags }}
          image: ${{ steps.build_image.outputs.image }}
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
    # Sign container
      - uses: sigstore/cosign-installer@v3.4.0
        if: github.event_name != 'pull_request'
      - name: Sign container image
        if: github.event_name != 'pull_request'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ghcr.io/${{ steps.build_image.outputs.image }}@${{ steps.push.outputs.digest }}
        env:
          TAGS: ${{ steps.push.outputs.digest }}
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}

      - name: Echo outputs
        if: github.event_name != 'pull_request'
        run: |
          echo "${{ toJSON(steps.push.outputs) }}"

  tagged-release:
    name: Tagged Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: marvinpinto/action-automatic-releases@v1.2.1
        if: |
          startsWith(github.ref, 'refs/tags/v') &&
          github.event_name == 'push'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false